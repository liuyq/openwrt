# https://openwrt.org/docs/start
# could be used to check all possible functions

How to select a tag to base:

check if there release for the tag like
    http://downloads.openwrt.org/releases/18.06.7/targets/ar71xx/tiny/packages/Packages.gz
18.06.7 is the tag to be used

https://openwrt.org/supported_devices/432_warning
https://openwrt.org/docs/guide-user/additional-software/imagebuilder
https://openwrt.org/docs/guide-user/additional-software/saving_space
https://openwrt.org/docs/guide-user/additional-software/extroot_configuration

# usb drive would be recognized as /dev/sdxx sd mean scsi disk
# in dmesg following lines would be printed:
[    6.964113] usb-storage 1-1:1.0: USB Mass Storage device detected
[    6.970400] scsi host0: usb-storage 1-1:1.0
[    8.007425] scsi 0:0:0:0: Direct-Access              Flash Disk       2.00 PQ: 0 ANSI: 2
[    8.017759] sd 0:0:0:0: [sda] 516608 512-byte logical blocks: (265 MB/252 MiB)
[    8.024174] sd 0:0:0:0: [sda] Write Protect is off
[    8.028394] sd 0:0:0:0: [sda] Mode Sense: 0b 00 00 08
[    8.028917] sd 0:0:0:0: [sda] No Caching mode page found
[    8.033630] sd 0:0:0:0: [sda] Assuming drive cache: write through
[    8.048292] sd 0:0:0:0: [sda] Attached SCSI removable disk

# checking filesystems supported:
root@OpenWrt:/# cat /proc/filesystems
nodev   sysfs
nodev   rootfs
nodev   ramfs
nodev   bdev
nodev   proc
nodev   tmpfs
nodev   debugfs
nodev   sockfs
nodev   bpf
nodev   pipefs
nodev   devpts
        squashfs
nodev   jffs2
nodev   overlay
        vfat
root@OpenWrt:/#

## Flash new firmwares
    press tpl to step into uboot

    sudo cp  bin/targets/ar71xx/tiny/openwrt-ar71xx-tiny-tl-wr743n-v2-squashfs-factory.bin /var/lib/tftpboot/openwrt-new.bin

    sudo ifconfig enp0s25:0 192.168.1.100

    hornet> tftpboot 0x80000000 openwrt-new.bin
    hornet> erase 0x9f020000 +0x3c0000
    hornet> cp.b 0x80000000 0x9f020000 0x3c0000
    hornet> bootm 0x9f020000

    sudo ifconfig enp0s25:0 down

## to boot with usb drive
## 1. compile the images with block-mount, kmod-fs-ext4, kmod-usb-core, kmod-usb-storag enabled
##    so that the usb drive could be recognized.
## 2. disable ipv6 support, so that we could create the images for 4MB devices
## 3. boot and change it to boot from usb drive:
##    https://openwrt.org/docs/guide-user/additional-software/extroot_configuration
##
## 3.1 backup the old overlay
        DEVICE="$(awk -e '/\s\/overlay\s/{print $1}' /etc/mtab)"
        uci -q delete fstab.rwm
        uci set fstab.rwm="mount"
        uci set fstab.rwm.device="${DEVICE}"
        uci set fstab.rwm.target="/rwm"
        uci commit fstab
## 3.2 add new config to mount usb drive
        DEVICE="/dev/sda1"
        eval $(block info "${DEVICE}" | grep -o -e "UUID=\S*")
        uci -q delete fstab.overlay
        uci set fstab.overlay="mount"
        uci set fstab.overlay.uuid="${UUID}"
        uci set fstab.overlay.target="/overlay"
        uci commit fstab
## 3.3 copy data to usb drive
        mount /dev/sda1 /mnt
        rm -fr /mnt/*
        cp -a -f /overlay/. /mnt
        umount /mnt

## 3.4 reboot

## 3.5 make swap partition
        dd if=/dev/zero of=/swap bs=1M count=100
        mkswap /swap

        uci -q delete fstab.swap
        uci set fstab.swap="swap"
        uci set fstab.swap.device="/swap"
        uci commit fstab
        /etc/init.d/fstab boot

## set host to have fixed static ip
    Or via cmdline:
        uci -q delete dhcp.laptop
        uci set dhcp.laptop=host
        uci set dhcp.laptop.name=laptop
        uci set dhcp.laptop.dns=1
        uci set dhcp.laptop.map=3C:97:0E:67:5A:E9
        uci set dhcp.laptop.ip=192.168.5.135
        uci commit dhcp
        /etc/init.d/dnsmasq restart

    host side restart the networking servie to have new ip
        sudo /etc/init.d/networking restart

## 4. Preserving software package lists across boots
    host side, open server for kmod packages:
        python -m SimpleHTTPServer 8080

    sed -i -r -e "s/^(lists_dir\sext\s).*/\1\/usr\/lib\/opkg\/lists/" /etc/opkg.conf

    src/gz openwrt_core http://192.168.5.135:8080/targets/ar71xx/tiny/packages
    sed -i -r 's|http://downloads.openwrt.org/releases/19.07.1/targets|http://192.168.5.135:8080/targets|' /etc/opkg/distfeeds.conf
    opkg update

## 5.  Install Luci

    opkg update
    opkg install luci

    http://192.168.5.1/cgi-bin/luci/

    http://192.168.5.1/cgi-bin/luci/admin/network/dhcp add static ip

    edit file /etc/config/dhcp to assign a fixed ip for the host
        config host
            option name 'laptop'
            option dns '1'
            option mac '3C:97:0E:67:5A:E9'
            option ip '192.168.5.135'

## Access via ssh
    ssh root@192.168.5.1

## F.1 support for usb video
    https://openwrt.org/docs/guide-user/hardware/video/usb.video
    https://openwrt.org/docs/guide-user/hardware/video/webcam

    opkg install kmod-video-uvc mjpg-streamer luci-app-mjpg-streamer
    opkg install usbutils v4l-utils uvcdynctrl fswebcam

    edit /etc/config/mjpg-streamer to:
        1. enable mjpg-streamer
        2. enable yuv to 1, otherwise JPEG format will be used,
           and mjpg_streamer could not display it correctly via http access

        # sed -i "s|option enabled '0'|option enabled '1'|" /etc/config/mjpg-streamer
        # sed -i "s|option yuv '0'|option yuv '1'|" /etc/config/mjpg-streamer

    /etc/init.d/mjpg-streamer enable
    /etc/init.d/mjpg-streamer start

    http://192.168.5.1:8080/ with openwrt/openwrt

    play with:
    -y         (enable yuv format)
    -r WxH        (resolution wight x hight. 160x120 is the smallest)
    -f Digit    (framerate per sek. use 1)
    example:
    mjpg_streamer -i "input_uvc.so -d /dev/video0 -y -r 160x120 -f 5 -q 50" -o "output_http.so -w /www/webcam"

    uvcdynctrl -d /dev/video0 --formats
    Now open the URL http://192.168.1.1:8080/ in the Firefox browser or VLC and watch the MJPEG stream (the default username/password is “openwrt”/“openwrt”).
    In other browsers, scripts, etc., you can use http://192.168.1.1:8080?action=snapshot for taking one image or http://192.168.1.1:8080?action=stream for stream of images.

## F.2 support for usb printer
    https://openwrt.org/docs/guide-user/services/print_server/cups.server
    https://openwrt.org/docs/guide-user/services/print_server/p910nd
    https://openwrt.org/docs/guide-user/services/print_server/p910ndprinterserver
    https://openwrt.org/docs/guide-user/services/print_server/p910nd.server


    https://ykhandler.wordpress.com/2015/06/22/starprintopenwrtprinter-sharing/

    opkg install kmod-usb-printer p910nd luci-app-p910nd
    has lines like following in the output of dmesg command:
        root@OpenWrt:/# dmesg |grep -i printer
        [  355.622847] usblp 1-1.4:1.1: usblp0: USB Bidirectional printer dev 5 if 1 alt 0 proto 2 vid 0x03F0 pid 0x8711
        root@OpenWrt:/#

        root@OpenWrt:/# netstat -an|grep 9100
        tcp        0      0 0.0.0.0:9100            0.0.0.0:*               LISTEN
        root@OpenWrt:/#

    http://192.168.5.1/cgi-bin/luci/admin/services/p910nd
            choose the Services -> p910nd – Printer Server.
            Check the enable checklist then in the interface
            choose LAN.
            Port: 9100.
            Checklist the bidirectional mode.
            Then press Save & Apply.

            Go to system -> Startup. Look at p910nd.
            To make sure the service is started.
            Press the start button beside the p910nd.

       OR Via cmdline:
            # Add a printer
            uci -q delete p910nd.prn0
            uci set p910nd.prn0=p910nd
            uci set p910nd.prn0.device=/dev/usb/lp0
            uci set p910nd.prn0.port=0
            uci set p910nd.prn0.bidirectional=1
            uci set p910nd.prn0.enabled=1
            uci commit p910nd
            /etc/init.d/p910nd restart

            # Delete the printer prn0
            uci delete p910nd.prn0
            uci commit p910nd
            /etc/init.d/p910nd restart


    install the StartPrint apks:
        StarPrint_Mobile_Print_v04.01.50.apk
        StarPrint_Photo_Editor_v01.00.20.apk

    Then open it. Slide it to Print Preview.
        On the printer option, click on “[No printer Selected]”.
        Press the Shared Printer in the middle bottom side.
        Type the Printer name to anything you like.
        Click on the IPP in the type options, Change it to “AppSocket(JetDirect)”.
        Type the Host to 192.168.5.1 and the port to 9100.
        Type the Shared name (i type mp237, leave it to default seems work too).
        Next click the select driver in the driver Options.
        Choose the manufacture of the printer. Like HP
        Then choose the type of printer that you got. Like:
            HP Destjet 2050 j510 Series
        After that press Ok.

## F.3 support for usb scanner

    https://openwrt.org/docs/guide-user/services/scanner_server/saned?s[]=sane

    opkg update
    opkg install kmod-usb-printer
    opkg install xinetd
    opkg install sane-daemon sane-frontends sane-hp

    scanimage -L
    root@OpenWrt:~# scanimage -L
    device `hpaio:/usb/Deskjet_2050_J510_series?serial=CN23J384TQ05D1' is a Hewlett-Packard Deskjet_2050_J510_series all-in-one
    root@OpenWrt:~#

    root@OpenWrt:~# opkg list-installed |grep -i sane
    hplip-sane - 3.19.6-2
    libsane - 1.0.27-4
    sane-daemon - 1.0.27-4
    sane-frontends - 1.0.27-4
    root@OpenWrt:~#


    root@OpenWrt:~# vi /etc/xinetd.d/sane-port # to enable saned

    echo "192.168.5.1/24" >> /etc/sane.d/saned.conf # to enable saned to be accessible from the LAN
    /etc/init.d/xinetd restart # to restart the saned service

    #scanimage -d net:192.168.5.1:hpaio:/usb/Deskjet_2050_J510_series?serial=CN23J384TQ05D1 --format jpeg -p --mode Color --resolution 300 -x 24 -y 35 >test.jpeg
    # resolution with 1200 does not work, and has relation with the x and y
    #but this seems not work

## P.1 Cannot satisfy the following dependencies for kmod-video-uvc:

        root@OpenWrt:/# opkg install kmod-video-uvc
        Installing kmod-video-uvc (4.9.211-1) to root...
        Downloading http://downloads.openwrt.org/releases/18.06-SNAPSHOT/targets/ar71xx/tiny/packages/kmod-video-uvc_4.9.211-1_mips_24kc.ipk
        Collected errors:
         * satisfy_dependencies_for: Cannot satisfy the following dependencies for kmod-video-uvc:
         *      kernel (= 4.9.211-1-db2d5425c674d1648616e3c37760e80e)
         * opkg_install_cmd: Cannot install package kmod-video-uvc.
        root@OpenWrt:/# cat /proc/version
        Linux version 4.9.208 (liuyq@laptop) (gcc version 7.3.0 (OpenWrt GCC 7.3.0 r7960+9-ab9d1bf608) ) #0 Mon Jan 13 10:01:11 2020
        root@OpenWrt:/#

        root@OpenWrt:/# opkg info kmod-video-uvc
        Package: kmod-video-uvc
        Version: 4.9.211-1
        Depends: kernel (= 4.9.211-1-db2d5425c674d1648616e3c37760e80e), kmod-usb-core, kmod-video-videobuf2, kmod-input-core, kmod-video-core
        Status: install user not-installed
        Section: kernel
        Architecture: mips_24kc
        Size: 38549
        Filename: kmod-video-uvc_4.9.211-1_mips_24kc.ipk
        Description: Kernel modules for supporting USB Video Class (UVC) devices
        root@OpenWrt:/#

    Resolution 1:
        opkg install kmod-video-uvc --force-depends
    Resolution 2:
        KERNEL_PATCHVER defined in include/kernel-version.mk
        setup local release site, run following command under the bin directory:
            python -m SimpleHTTPServer 8080
        update the url for openwrt_core defined in /etc/opkg/distfeeds.conf to use local site
            root@OpenWrt:/# cat /etc/opkg/distfeeds.conf
            src/gz openwrt_core http://192.168.5.136:8080/targets/ar71xx/tiny/packages
            src/gz openwrt_base http://downloads.openwrt.org/releases/18.06.6/packages/mips_24kc/base
            src/gz openwrt_luci http://downloads.openwrt.org/releases/18.06.6/packages/mips_24kc/luci
            src/gz openwrt_packages http://downloads.openwrt.org/releases/18.06.6/packages/mips_24kc/packages
            src/gz openwrt_routing http://downloads.openwrt.org/releases/18.06.6/packages/mips_24kc/routing
            src/gz openwrt_telephony http://downloads.openwrt.org/releases/18.06.6/packages/mips_24kc/telephony
            root@OpenWrt:/#

## P.2 mjpg_streamer: Unable to start capture: No space left on device
    need to use a good usb hub and a good usb drive
    otherwise the bandwidth of the webcam might be affected

## build kernel:
    make \
        -C /home/liuyq/data/openwrt/build_dir/target-mips_24kc_musl/linux-ar71xx_tiny/linux-4.9.119 \
        HOSTCFLAGS="-O2 \
        -I/home/liuyq/data/openwrt/staging_dir/host/include  \
        -Wall \
        -Wmissing-prototypes \
        -Wstrict-prototypes" \
        CROSS_COMPILE="mips-openwrt-linux-musl-" \
        ARCH="mips" \
        KBUILD_HAVE_NLS=no \
        KBUILD_BUILD_USER="" \
        KBUILD_BUILD_HOST="" \
        KBUILD_BUILD_TIMESTAMP="Sun Sep 16 22:22:56 2018" \
        KBUILD_BUILD_VERSION="0" \
        HOST_LOADLIBES="-L/home/liuyq/data/openwrt/staging_dir/host/lib" \
        CONFIG_SHELL="bash" \
        V=''  \
        cmd_syscalls= \
        KERNELRELEASE=4.9.119 \
        CC="mips-openwrt-linux-musl-gcc" \
        all modules

## package in menuconfig

    CATEGORY -> SUBMENU

   defined in package/libs/zlib/Makefile
   Libraries -> zlib
        define Package/zlib
          SECTION:=libs
          CATEGORY:=Libraries
          TITLE:=Library implementing the deflate compression method
          URL:=http://www.zlib.net/
        endef


    Development > Libraries -> zlib-dev
    defined in package/libs/zlib/Makefile

        define Package/zlib-dev
          SECTION:=devel
          CATEGORY:=Development
          SUBMENU:=Libraries
          DEPENDS:=zlib
          TITLE:=Development files for the zlib library
        endef

